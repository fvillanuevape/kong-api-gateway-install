# Docker compose deploy Kong with postgresql
version: '3.9'
networks:
  kong-net:
    external: false
services:
  db:
    image: postgres:15-alpine
    container_name: postgres-db
    volumes:
      - "D:/docker/postgresql/data:/var/lib/postgresql/data"
    restart: always
    environment:
      - POSTGRES_PASSWORD=kong
      - POSTGRES_USER=kong
    ports:
      - '5432:5432'
    networks:
      - kong-net
  kong-migrations:
    image: kong/kong-gateway:3.5.0.2
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
      - KONG_PG_PASSWORD=kong
      - KONG_PASSWORD=test  
    networks:
      - kong-net
    restart: on-failure
  kong:
    depends_on:
      - db
    image: kong/kong-gateway:3.5.0.2
    container_name: kong
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
      - "8002:8002"
      - "8445:8445"
      - "8003:8003"
      - "8004:8004"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:20
    networks:
      - kong-net
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout 
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_ADMIN_GUI_URL=http://localhost:8002
      - KONG_PLUGINS=bundled
      - KONG_ENFORCE_RBAC=on
      - KONG_ADMIN_GUI_AUTH=basic-auth
      - KONG_ADMIN_GUI_SESSION_CONF={"secret":"secret","storage":"kong","cookie_secure":false}
      - KONG_LICENSE_DATA
